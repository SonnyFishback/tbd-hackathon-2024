// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

model User {
  id          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username    String                @unique
  email       String                @unique
  password    String
  avatar      String
  name        String
  // invitations Invitation[]
  submissions InterviewSubmission[]
  interviews  Interview[]
  xp          Int                   @default(0)

  // badges String[]
  // accomplishments String[]
  @@schema("auth")
}

model Interview {
  id          String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  questions   Question[]
  submissions InterviewSubmission[]
  owner       User                  @relation(fields: [ownerID], references: [id])
  ownerID     String                @db.Uuid

  @@schema("public")
}

model Question {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type        String
  interview   Interview @relation(fields: [interviewID], references: [id])
  interviewID String    @db.Uuid
  asnwers     Answer[]

  @@schema("public")
}

model Answer {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question   Question @relation(fields: [questionID], references: [id])
  questionID String   @db.Uuid
  text       String

  @@schema("public")
}

model InterviewSubmission {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  interviewee   User      @relation(fields: [intervieweeID], references: [id])
  intervieweeID String    @db.Uuid
  interview     Interview @relation(fields: [interviewID], references: [id])
  interviewID   String    @db.Uuid
  answers       String[]
  // results String

  @@schema("public")
}

// model Invitation {
//   id String @id @db.Uuid @default(dbgenerated("gen_random_uuid()"))
//   sender User @relation(fields: [senderID], references: [id])
//   senderID String
//   recipiants String[] // this should link to the user id.
//   recipiantID String
//   interview Interview @relation(fields: [interviewID], references: [id])
//   interviewID String
// }

// enum Role {
//   USER
//   ADMIN
//   INTERVIEWER
//   INTERVIEWEE
// }
